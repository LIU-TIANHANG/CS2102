<!DOCTYPE html>
<html>
<head>
    <!-- Page Title -->
    <title><%= title%></title>
    <!--<link rel='stylesheet' href='/stylesheets/style.css' />-->

    <% include ../../partials/home %>

    <style>
        .jumbotron {
            background-image: url(https://images.pexels.com/photos/704982/pexels-photo-704982.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260);
            background-size: cover;
            height: 100vh;
            background-repeat: no-repeat;
            background-position: center center;
            background-attachment: fixed;
        }

        .card-header {
            font-weight: bold;
            color: #271E1E;
            background-color:bisque;
        }
        .btn {
            background-color: bisque;
            border-color: bisque;
            color: #271E1E;
            display: block;
            margin-left: auto;
            margin-right: auto;
            width: auto;
        }
    </style>

</head>
<body>

<div class="jumbotron jumbotron-fluid">
    <div class="card mx-auto mt-5 mb-5" style="width:700px; background-color: #271E1E; opacity: 0.85">
        <div class="card-header">Add A mealtype</div>
        <div class="card-body">
            <% if (typeof message == "string" && message) { %>
                <p class="alert alert-danger"><%= message %></p>
            <% } %>
                <form id="html_form" action="#" role="form" method="post">
                <div class="form-group">
                    <label for="mealtype" style="color: antiquewhite">MealType</label>
                    <select name="mealtype" id="mealtype">
                        <% for(var i=0; i<data.length; i++) { %>
                            <option><%= data[i].mealtype%></option>
                        <%}%>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary btn-block" style="width: 659px; font-weight: bold">Submit</button>
            </form>

        </div>
    </div>
</div>

<script>
    (function() {
        window.addEventListener('load', function() {
            var forms = [document.getElementById('html_form')];
            var validation = Array.prototype.filter.call(forms, function(form) {
                form.addEventListener('submit', check, false);
            });
        }, false);
    })();
</script>
<script>
    // populate time
    function populate(selector) {
        var select = $(selector);
        var hours, minutes, ampm;
        for(var i = 420; i <= 1320; i += 15){
            hours = Math.floor(i / 60);
            minutes = i % 60;
            if (minutes < 10){
                minutes = '0' + minutes; // adding leading zero
            }
            // ampm = hours % 24 < 12 ? 'AM' : 'PM';
            // hours = hours % 12;
            if (hours === 0){
                hours = 12;
            }
            select.append($('<option></option>')
                .attr('value', hours + ':' + minutes )
                .text(hours + ':' + minutes ));
        }
    }
    populate('#ch');
    populate('#oh');
    // Restricts input for the given textbox to the given inputFilter.
    function setInputFilter(textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function(event) {
            textbox.addEventListener(event, function() {
                if (inputFilter(this.value)) {
                    this.oldValue = this.value;
                    this.oldSelectionStart = this.selectionStart;
                    this.oldSelectionEnd = this.selectionEnd;
                } else if (this.hasOwnProperty("oldValue")) {
                    this.value = this.oldValue;
                    this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                }
            });
        });
    }
    setInputFilter(document.getElementById("telephone"), function(value) {
        return /^\d*$/.test(value);
    });
    // Integer values (both positive and negative):
    // /^-?\d*$/.test(value)
    // Integer values (positive only):
    // /^\d*$/.test(value)
    // Integer values (positive and up to a particular limit):
    // /^\d*$/.test(value) && (value === "" || parseInt(value) <= 500)
    // Floating point values (allowing both . and , as decimal separator):
    // /^-?\d*[.,]?\d*$/.test(value)
    // Currency values (i.e. at most two decimal places):
    // /^-?\d*[.,]?\d{0,2}$/.test(value)
    // Hexadecimal values:
    //     /^[0-9a-f]*$/i.test(value)
</script>
</body>
</html>
